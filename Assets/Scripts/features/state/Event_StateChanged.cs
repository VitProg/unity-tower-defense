// This is AutoGenerated file! TODO

using Leopotam.EcsLite;
using td.features._common.costPopup;
using td.features.infoPanel;
using td.features.shardCollection;
using td.features.shardStore;

namespace td.features.state
{
    public struct Event_StateChanged : IEventUnique, IEventGlobal
    {
        public bool? maxLives;
        public bool? lives;
        public bool? levelNumber;
        public bool? energy;
        public bool? nextWaveCountdown;
        public bool? waveNumber;
        public bool? waveCount;
        public bool? activeSpawnCount;
        public bool? enemiesCount;
        public bool? gameSpeed;
        public InfoPanel_StateEvent infoPanel;
        public ShardStore_StateEvent shardStore;
        public ShardCollection_StateEvent shardCollection;
        public CostPopup_StateEvent costPopup;

        public void All()
        {
            maxLives = true;
            lives = true;
            levelNumber = true;
            energy = true;
            nextWaveCountdown = true;
            waveNumber = true;
            waveCount = true;
            activeSpawnCount = true;
            enemiesCount = true;
            gameSpeed = true;
            infoPanel.All();
            shardStore.All();
            shardCollection.All();
            costPopup.All();
        }

        public void Clear()
        {
            maxLives = false;
            lives = false;
            levelNumber = false;
            energy = false;
            nextWaveCountdown = false;
            waveNumber = false;
            waveCount = false;
            activeSpawnCount = false;
            enemiesCount = false;
            gameSpeed = false;
            infoPanel.Clear();
            shardStore.Clear();
            shardCollection.Clear();
            costPopup.Clear();
        }
    }
}
